#!/bin/bash
# ==============================================================================
# Script de diagnostic rapide DATA_BOT v4
# ==============================================================================

set -euo pipefail

echo "üîç Diagnostic DATA_BOT v4 - $(date)"
echo "=================================="

echo
echo "üì¶ √âtat des conteneurs:"
docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" --filter "name=databot" || echo "‚ùå Aucun conteneur trouv√©"

echo
echo "üîç Images disponibles:"
docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.CreatedAt}}\t{{.Size}}" --filter "reference=databot/*" || echo "‚ùå Aucune image trouv√©e"

echo
echo "üåê Test rapide des endpoints:"
endpoints=(
    "http://localhost:8080/health"
    "http://localhost:8082/health"
    "http://localhost:80/health"
)

for endpoint in "${endpoints[@]}"; do
    if curl -s -m 3 "$endpoint" > /dev/null 2>&1; then
        echo "‚úÖ $endpoint : Accessible"
    else
        echo "‚ùå $endpoint : Non accessible"
    fi
done

echo
echo "üìã Logs r√©cents (erreurs uniquement):"
for container in $(docker ps -a --format "{{.Names}}" --filter "name=databot" | head -3); do
    if [[ -n "$container" ]]; then
        echo "--- $container ---"
        docker logs --tail=5 "$container" 2>&1 | grep -iE "(error|exception|failed)" | head -3 || echo "Pas d'erreurs r√©centes"
    fi
done

echo
echo "üîß Actions recommand√©es:"
echo "1. V√©rifier les logs d√©taill√©s: docker logs <container_name>"
echo "2. Red√©marrer un service: docker restart <container_name>"
echo "3. Monitoring continu: ./docker/scripts/monitor.sh monitor"
