apiVersion: v1
kind: ConfigMap
metadata:
  name: databot-config
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: config
    app.kubernetes.io/version: v4
data:
  # Configuration générale
  ENVIRONMENT: "kubernetes"
  LOG_LEVEL: "INFO"
  TZ: "Europe/Paris"
  KUBERNETES_NAMESPACE: "databot-v4"
  
  # Services de base de données
  POSTGRES_HOST: "postgres-service"
  POSTGRES_DB: "databot_v4"
  POSTGRES_USER: "databot"
  POSTGRES_PORT: "5432"
  
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Services de recherche
  ELASTICSEARCH_HOST: "elasticsearch-service"
  ELASTICSEARCH_PORT: "9200"
  
  OPENSEARCH_HOST: "opensearch-service"
  OPENSEARCH_PORT: "9200"
  USE_OPENSEARCH: "true"
  
  QDRANT_HOST: "qdrant-service"
  QDRANT_PORT: "6333"
  
  # Services AI
  OLLAMA_HOST: "ollama-service"
  OLLAMA_PORT: "11434"
  
  # Configuration applicative
  ENABLE_ML_CATEGORIZATION: "true"
  ENABLE_RESULT_CLUSTERING: "true"
  ENABLE_BLOCKCHAIN: "true"
  
  # Configuration blockchain
  BLOCKCHAIN_LISTEN_PORT: "8334"
  BLOCKCHAIN_MINING_ENABLED: "true"
  NODE_TYPE: "full_archive"
  
  # Configuration monitoring
  METRICS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
  
  # Configuration de performance
  WORKER_PROCESSES: "4"
  MAX_CONNECTIONS: "100"
  TIMEOUT: "300"
  
  # Configuration stockage
  DATA_RETENTION_DAYS: "90"
  BACKUP_ENABLED: "true"
  BACKUP_SCHEDULE: "0 2 * * *"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    upstream databot_api {
        least_conn;
        server databot-api-service:8080 max_fails=3 fail_timeout=30s;
    }
    
    upstream databot_admin {
        server databot-admin-service:8082 max_fails=3 fail_timeout=30s;
    }
    
    upstream databot_blockchain {
        server databot-blockchain-service:8334 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # API routes
        location /api/ {
            proxy_pass http://databot_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_timeout 300s;
        }
        
        # Admin interface
        location /admin/ {
            proxy_pass http://databot_admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Blockchain API
        location /blockchain/ {
            proxy_pass http://databot_blockchain/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Default route
        location / {
            proxy_pass http://databot_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'databot-k8s'
        environment: 'production'
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'databot-api'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - databot-v4
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: databot-api-service
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'databot-admin'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - databot-v4
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: databot-admin-service
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'databot-blockchain'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - databot-v4
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: databot-blockchain-service
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - databot-v4
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)