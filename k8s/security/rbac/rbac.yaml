# ==============================================================================
# CONFIGURATION RBAC DATA_BOT v4
# ==============================================================================

# ClusterRole pour les opérations globales DATA_BOT
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: databot-cluster-role
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
rules:
# Accès lecture aux nœuds pour le monitoring
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "nodes/stats"]
  verbs: ["get", "list", "watch"]

# Accès aux métriques des pods
- apiGroups: [""]
  resources: ["pods", "pods/metrics"]
  verbs: ["get", "list", "watch"]

# Accès aux services pour la découverte
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]

# Accès aux ConfigMaps pour la configuration dynamique
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

# Accès aux events pour le debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]

# Accès aux namespaces
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]

# Accès aux ressources de monitoring
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors", "podmonitors", "prometheusrules"]
  verbs: ["get", "list", "watch"]

# Accès aux métriques personnalisées
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]

# Accès aux APIs Custom Resources
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]

---
# Role pour les opérations dans le namespace databot-v4
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: databot-v4
  name: databot-namespace-role
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
rules:
# Gestion complète des pods
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec", "pods/portforward"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des services
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des ConfigMaps et Secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des PVC
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des deployments et statefulsets
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets", "daemonsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des jobs et cronjobs
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion de l'auto-scaling
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Accès aux métriques et VPA
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des NetworkPolicies
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies", "ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Gestion des PodDisruptionBudgets
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Accès aux événements
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]

---
# ServiceAccount pour l'API DATA_BOT
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databot-api
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: api
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/databot-api-role
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "databot-api"
automountServiceAccountToken: true

---
# ServiceAccount pour la blockchain
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databot-blockchain
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: blockchain
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/databot-blockchain-role
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "databot-blockchain"
automountServiceAccountToken: true

---
# ServiceAccount pour l'admin
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databot-admin
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: admin
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/databot-admin-role
automountServiceAccountToken: true

---
# ServiceAccount pour les opérations de monitoring
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databot-monitoring
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: monitoring
automountServiceAccountToken: true

---
# ServiceAccount pour les opérations de backup
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databot-backup
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: backup
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/databot-backup-role
automountServiceAccountToken: true

---
# ClusterRoleBinding pour l'API DATA_BOT
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: databot-api-cluster-binding
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-api
  namespace: databot-v4
roleRef:
  kind: ClusterRole
  name: databot-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding pour l'API dans le namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: databot-api-namespace-binding
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-api
  namespace: databot-v4
roleRef:
  kind: Role
  name: databot-namespace-role
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding pour la blockchain
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: databot-blockchain-binding
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-blockchain
  namespace: databot-v4
roleRef:
  kind: Role
  name: databot-namespace-role
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding pour l'admin
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: databot-admin-binding
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-admin
  namespace: databot-v4
roleRef:
  kind: Role
  name: databot-namespace-role
  apiGroup: rbac.authorization.k8s.io

---
# Role spécialisé pour le monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: databot-v4
  name: databot-monitoring-role
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: monitoring-rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors", "podmonitors", "prometheusrules"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
# RoleBinding pour le monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: databot-monitoring-binding
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-monitoring
  namespace: databot-v4
roleRef:
  kind: Role
  name: databot-monitoring-role
  apiGroup: rbac.authorization.k8s.io

---
# Role spécialisé pour les backups
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: databot-v4
  name: databot-backup-role
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: backup-rbac
rules:
- apiGroups: [""]
  resources: ["persistentvolumeclaims", "pods", "pods/exec"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots", "volumesnapshotcontents", "volumesnapshotclasses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# RoleBinding pour les backups
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: databot-backup-binding
  namespace: databot-v4
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-backup
  namespace: databot-v4
roleRef:
  kind: Role
  name: databot-backup-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole pour Prometheus Operator (si installé séparément)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: databot-prometheus-operator
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: prometheus-rbac
rules:
- apiGroups: ["monitoring.coreos.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["namespaces", "services", "endpoints", "pods", "nodes", "nodes/metrics"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding pour Prometheus
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: databot-prometheus-operator-binding
  labels:
    app.kubernetes.io/name: databot
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: databot-monitoring
  namespace: databot-v4
roleRef:
  kind: ClusterRole
  name: databot-prometheus-operator
  apiGroup: rbac.authorization.k8s.io