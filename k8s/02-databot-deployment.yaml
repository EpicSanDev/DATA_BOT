apiVersion: apps/v1
kind: Deployment
metadata:
  name: databot-v4
  namespace: databot-v4
  labels:
    app: databot
    version: v4
    component: main
spec:
  replicas: 2
  selector:
    matchLabels:
      app: databot
      version: v4
      component: main
  template:
    metadata:
      labels:
        app: databot
        version: v4
        component: main
    spec:
      containers:
      - name: databot-v4
        image: databot:v4-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http-api
        - containerPort: 8081
          name: plugin
        - containerPort: 8082
          name: admin
        - containerPort: 8083
          name: graphql
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: databot-secrets
              key: POSTGRES_PASSWORD
        envFrom:
        - configMapRef:
            name: databot-config
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: archive
          mountPath: /app/archive
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: databot-data-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: databot-logs-pvc
      - name: archive
        persistentVolumeClaim:
          claimName: databot-archive-pvc
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: databot-service
  namespace: databot-v4
  labels:
    app: databot
    version: v4
spec:
  selector:
    app: databot
    version: v4
    component: main
  ports:
  - name: http-api
    port: 8080
    targetPort: 8080
  - name: plugin
    port: 8081
    targetPort: 8081
  - name: admin
    port: 8082
    targetPort: 8082
  - name: graphql
    port: 8083
    targetPort: 8083
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: databot-ingress
  namespace: databot-v4
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  rules:
  - host: databot-v4.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: databot-service
            port:
              number: 8080
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: databot-service
            port:
              number: 8082
      - path: /graphql
        pathType: Prefix
        backend:
          service:
            name: databot-service
            port:
              number: 8083